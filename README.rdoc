= keyvalidatable

code :: https://github.com/kachick/keyvalidatable
bugs :: https://github.com/kachick/keyvalidatable/issue

== Description

Validate pair-object(Hash, Struct) keys.

== Usage

    require 'keyvalidatable/core_ext'
    
    class MyClass

      def my_method(options)
        options.validate_keys(must: [:a, :b], let: [:c])

        p "#{options} is valid"
      rescue
        p $!
      end

    end

    my_obj = MyClass.new
    my_obj.my_method(a: 1, b: 2, c: 3)       #=> "{:a=>1, :b=>2, :c=>3} is valid"
    my_obj.my_method(a: 1, c: 3)             #=> #<KeyValidatable::InvalidKeysError: Shortage: [:b] / Excess: []>
    my_obj.my_method(a: 1, b: 2)             #=> "{:a=>1, :b=>2} is valid"
    my_obj.my_method(a: 1, b: 2, c: 3, d: 4) #=> #<KeyValidatable::InvalidKeysError: Shortage: [] / Excess: [:d]>

== Requirements

Ruby 1.9.2 or later

== Installation

    gem install keyvalidatable

== License

The MIT X License

Copyright (c) 2012 Kenichi Kamiya

See the file LICENSE for further details.
